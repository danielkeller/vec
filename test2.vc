type int32 = int;

int foo = 6;

int:int one = __intrin:6;

int:int32 one = 7;

int:int test = one:arg;
int:int32 test = one:arg;

int:int main = 
(
	int bar = foo;

    int:int qwer = foo = test:arg;

	if (qwer:foo)
	(
		float asdf = 7.7;
	)
    else if (2)
        bar = 6;
    else
	    int a = (15; 16; 17);
);


//could do variadic templates:
//ie type foo?[A, B, ...] = [A first, B second, {[...]}];
//or whatever
//or have something that expands tuples into others like [a,b,?...]

//add storage duration specifier agg
//acts like static except initializer is run on first call to agg function
