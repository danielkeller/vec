type test?T = {?T};

type test2?(T, U) = [test!int, test!?T, test!?U, test];


int foo = 7;

float:int qwer;
int:float qwer;

float:int baf = qwer:arg;
int:float baf = qwer:arg;

float:int qwer = baf:arg;
int:float qwer = baf:arg;

int:int main = 
(
	int bar = foo;

	if (qwer:foo)
	(
		float asdf = 7.7;
	)
	int a = (15; 16; 17);
);

int:float main = 4; //ohhh noes

//could do variadic templates:
//ie type foo?[A, B, ...] = [A first, B second, {[...]}];
//or whatever
//or have something that expands tuples into others like [a,b,?...]

//add storage duration specifier agg
//acts like static except initializer is run on first call to agg function
