module dfsa;

foo bar;

private:

type foo = {float, int};

bar = baz;

int:int main = 
(

);

int baz;

//could do variadic templates:
//ie type foo?[A, B, ...] = [A first, B second, {[...]}];
//or whatever
//or have something that expands tuples into others like [a,b,?...]

//add storage duration specifier agg
//acts like static except initializer is run on first call to agg function
