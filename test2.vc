{[int foo]}

type foo?T = {?T};

type bar = [float x, foo y];

type baf = [foo!int, bar];

type lol = [foo!{?T}];


//could do variadic templates:
//ie type foo?[A, B, ...] = [A first, B second, {[...]}];
//or whatever

//add storage duration specifier agg
//acts like static except initializer is run on first call to agg function
