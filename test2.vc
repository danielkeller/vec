[[int, float], [float, int]] asfsdaf;

int foo = 6;

int:int test = 6;

int:[int a, int b] operator- = 2;

int:int one = __intrin:6;
int:[int a, float b] one = 7;

one:[7, 8.8];

int:int main = 
(
    {int} bar = {foo, 6, 7.8, one};
	int barf = [foo, 6, 7.8, one];
    
    bar - barf;

    bar - float ffera;

	if (qwer:foo)
	(
		float asdf = 7.7;
	)
    else if (2)
        bar = 6;
    else
	    int a = (15; 16; 17);
);

//could do variadic templates:
//ie type foo?[A, B, ...] = [A first, B second, {[...]}];
//or whatever
//or have something that expands tuples into others like [a,b,?...]

//add storage duration specifier agg
//acts like static except initializer is run on first call to agg function
