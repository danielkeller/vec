module dfsa;

type foo = bar!(int, float);
type baz = bar;

private:

type bar?(T,U) = {?T, [?U]}

//could do variadic templates:
//ie type foo?[A, B, ...] = [A first, B second, {[...]}];
//or whatever
//or have something that expands tuples into others like [a,b,?...]

//add storage duration specifier agg
//acts like static except initializer is run on first call to agg function
