
int foo = 7;

int:int baz = 
(
	float:int qwer = arg * 7.3;

	int bar = foo + 1;

	if (23 + bar + foo)
	(
		float asdf = 7.7;
	)
	int a = (15; 16; 17);
);


//TODO: don't expand types until sema phase.
//then, recursively expand along with everything else

//could do variadic templates:
//ie type foo?[A, B, ...] = [A first, B second, {[...]}];
//or whatever
//or have something that expands tuples into others like [a,b,?...]

//lambda syntax could be double parens (( a+b ))

//add storage duration specifier agg
//acts like static except initializer is run on first call to agg function
