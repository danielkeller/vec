#ifndef INTRINSIC_H
#define INTRINSIC_H

namespace intr
{

enum TYPES
{
    INT8,
    INT16,
    INT32,
    INT64,
    NUM_INT_TYPES,

    FLOAT = NUM_INT_TYPES,
    DOUBLE,
    LONG_DOUBLE,
    NUM_NUMERIC_TYPES
};

enum OPS
{
    PLUS,
    MINUS     = PLUS      + TYPES::NUM_NUMERIC_TYPES,
    TIMES     = MINUS     + TYPES::NUM_NUMERIC_TYPES,
    DIVIDE    = TIMES     + TYPES::NUM_NUMERIC_TYPES,
    LESS      = DIVIDE    + TYPES::NUM_NUMERIC_TYPES,
    NOGREATER = LESS      + TYPES::NUM_NUMERIC_TYPES,
    GREATER   = NOGREATER + TYPES::NUM_INT_TYPES,
    NOLESS    = GREATER   + TYPES::NUM_NUMERIC_TYPES,
    EQUAL     = NOLESS    + TYPES::NUM_INT_TYPES,
    NOTEQUAL  = EQUAL     + TYPES::NUM_INT_TYPES,
    BITAND    = NOTEQUAL  + TYPES::NUM_INT_TYPES,
    BITOR     = BITAND    + TYPES::NUM_INT_TYPES,
    BITXOR    = BITOR     + TYPES::NUM_INT_TYPES,
    MOD       = BITXOR    + TYPES::NUM_INT_TYPES,
    DECREMENT = MOD       + TYPES::NUM_INT_TYPES,
    INCREMENT = DECREMENT + TYPES::NUM_INT_TYPES,
    AND       = INCREMENT + TYPES::NUM_INT_TYPES,
    OR,
    NOT,
    CONCAT,
    SUBSCRIPT = CONCAT    + 3
};

}
#endif